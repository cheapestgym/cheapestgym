{"version":3,"sources":["apis/SDK.js","apis/IconexConnect.js","constants.js","App.js","serviceWorker.js","index.js","assets/images/marker.png"],"names":["provider","HttpProvider","window","PROVIDER_URL","iconService","IconService","CallBuilder","IconBuilder","CallTransactionBuilder","SDK","callBuild","_ref","arguments","length","undefined","from","methodName","to","_ref$params","params","method","build","sendTxBuild","_ref2","_ref2$params","_ref2$networkId","networkId","NID","_ref2$stepLimit","stepLimit","_ref2$value","value","jsonrpc","nid","timestamp","concat","Date","getTime","toString","version","id","IconexConnect","getAddress","Promise","resolve","addEventListener","eventHandler","event","_event$detail","detail","type","payload","removeEventListener","dispatchEvent","CustomEvent","sendTransaction","_event$detail2","result","constants","MODE","LOG_OUT","LOG_IN","Header","Content","App","_useState","useState","CONST","_useState2","Object","slicedToArray","mode","setMode","_useState3","_useState4","myAddress","setMyAddress","_useState5","_useState6","cheapestPrice1","setCheapestPrice1","_useState7","_useState8","cheapestPrice2","setCheapestPrice2","_useState9","_useState10","cheapestPrice3","setCheapestPrice3","_useState11","_useState12","cheapestPrice4","setCheapestPrice4","_useState13","_useState14","priceToUpdate1","setPriceToUpdate1","_useState15","_useState16","priceToUpdate2","setPriceToUpdate2","_useState17","_useState18","priceToUpdate3","setPriceToUpdate3","_useState19","_useState20","priceToUpdate4","setPriceToUpdate4","get_set_Price","_x","_x2","_get_set_Price","apply","this","asyncToGenerator","regenerator_default","a","mark","_callee","label","obj_CheapestPrice","price","wrap","_context","prev","next","call","IconConverter","toHex","Number","CONTRACT_ADDRESS","execute","sent","stop","_getAddress","_callee2","_context2","onInputChange","e","target","updatePrice","_x3","_updatePrice","_callee3","priceToUpdate","setCheapestPrice","txObj","tx","_context3","console","log","alert","useEffect","react_default","createElement","layout","es_button","size","style","fontFamily","onClick","row","justify","align","className","col","src","marker","alt","width","margin","marginTop","fontSize","height","marginBottom","index_es","apiKey","mapId","render","element","daum","maps","load","map","Map","center","LatLng","level","Marker","position","setMap","span","fontWeight","input","onChange","addonAfter","disabled","icon","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"8SAMMA,EAAW,IAAIC,eAAaC,OAAOC,cACnCC,EAAc,IAAIC,IAAYL,GAGlCM,EAEEC,cAFFD,YACAE,EACED,cADFC,uBAiDaC,EAAA,CACbL,cACAM,UAhDgB,WAKP,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAJFG,EAISJ,EAJTI,KACAC,EAGSL,EAHTK,WACAC,EAESN,EAFTM,GAESC,EAAAP,EADTQ,cACS,IAAAD,EADA,GACAA,EAQT,OAPoB,IAAIZ,GAErBS,KAAKA,GACLE,GAAGA,GACHG,OAAOJ,GACPG,OAAOA,GACPE,SAqCHC,YAjCkB,WAQT,IAAAC,EAAAX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAPFG,EAOSQ,EAPTR,KACAE,EAMSM,EANTN,GACAD,EAKSO,EALTP,WAKSQ,EAAAD,EAJTJ,cAIS,IAAAK,EAJA,GAIAA,EAAAC,EAAAF,EAHTG,iBAGS,IAAAD,EAHGvB,OAAOyB,IAGVF,EAAAG,EAAAL,EAFTM,iBAES,IAAAD,EAFG,UAEHA,EAAAE,EAAAP,EADTQ,aACS,IAAAD,EADD,MACCA,EAcT,MAAO,CACLE,QAAS,MACTZ,OAAQ,sBACRD,QAhB6B,IAAIX,GAEhCyB,IAAIP,GACJX,KAAKA,GACLE,GAAGA,GACHY,UAAUA,GACVE,MAAMA,GACNG,UANS,KAAAC,QAMgC,KAAxB,IAAIC,MAAQC,WAAkBC,SAAS,MACxDlB,OAAOJ,GACPG,OAAOA,GACPoB,QAAQ,OACRlB,QAMDmB,GAAI,KCtBSC,EAAA,CACbC,WAnCe,kBAAM,IAAIC,QAAQ,SAACC,GAQlC1C,OAAO2C,iBAAiB,wBAPH,SAAfC,EAAgBC,GAAU,IAAAC,EACJD,EAAME,OAAxBC,EADsBF,EACtBE,KAAMC,EADgBH,EAChBG,QACD,qBAATD,GACFN,EAAQO,GAEVjD,OAAOkD,oBAAoB,wBAAyBN,KAGtD5C,OAAOmD,cAAc,IAAIC,YAAY,uBAAwB,CAC3DL,OAAQ,CACNC,KAAM,yBAyBVK,gBAnBsB,SAAApC,GAAM,OAAI,IAAIwB,QAAQ,SAACC,GAQ7C1C,OAAO2C,iBAAiB,wBAPH,SAAfC,EAAgBC,GAAU,IAAAS,EACJT,EAAME,OAAxBC,EADsBM,EACtBN,KAAMC,EADgBK,EAChBL,QACD,sBAATD,GACFN,EAAQO,EAAQM,QAElBvD,OAAOkD,oBAAoB,wBAAyBN,KAGtD5C,OAAOmD,cAAc,IAAIC,YAAY,uBAAwB,CAC3DL,OAAQ,CACNC,KAAM,mBACNC,QAAShC,UC7BFuC,EAAA,CACbC,KAAQ,CACJC,QAAW,UACXC,OAAU,4BCcRC,sBAASC,cAqJFC,MAnJf,WAAe,IAAAC,EACaC,mBAAUC,EAAMR,KAAN,SADvBS,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACLM,EADKH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAEuBP,mBAAS,IAFhCQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAELE,EAFKD,EAAA,GAEME,EAFNF,EAAA,GAAAG,EAGiCX,mBAAS,GAH1CY,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGLE,EAHKD,EAAA,GAGWE,EAHXF,EAAA,GAAAG,EAIiCf,mBAAS,GAJ1CgB,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAILE,EAJKD,EAAA,GAIWE,EAJXF,EAAA,GAAAG,EAKiCnB,mBAAS,GAL1CoB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAKLE,EALKD,EAAA,GAKWE,EALXF,EAAA,GAAAG,EAMiCvB,mBAAS,GAN1CwB,EAAArB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,GAMLE,EANKD,EAAA,GAMWE,EANXF,EAAA,GAAAG,EAOgC3B,mBAAS,GAPzC4B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAONE,EAPMD,EAAA,GAOUE,EAPVF,EAAA,GAAAG,EAQgC/B,mBAAS,GARzCgC,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAQNE,EARMD,EAAA,GAQUE,EARVF,EAAA,GAAAG,EASgCnC,mBAAS,GATzCoC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GASNE,EATMD,EAAA,GASUE,EATVF,EAAA,GAAAG,GAUgCvC,mBAAS,GAVzCwC,GAAArC,OAAAC,EAAA,EAAAD,CAAAoC,GAAA,GAUNE,GAVMD,GAAA,GAUUE,GAVVF,GAAA,YAoBEG,GApBFC,EAAAC,GAAA,OAAAC,GAAAC,MAAAC,KAAAtG,WAAA,SAAAoG,KAAA,OAAAA,GAAA3C,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAoBb,SAAAC,EAA6BC,EAAOC,GAApC,IAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsBrH,EAAIL,YAAY2H,KAClCtH,EAAIC,UAAU,CACZM,WAAY,mBACZG,OAAQ,CACNqG,MAAOQ,gBAAcC,MAAMC,OAAOV,KAEpCvG,GAAIf,OAAOiI,oBAEbC,UATJ,OACQV,EADRE,EAAAS,KAUEZ,EAAkBS,OAAOR,IAV3B,wBAAAE,EAAAU,SAAAf,OApBaN,MAAAC,KAAAtG,WAAA,SAAA2H,KAAA,OAAAA,GAAAlE,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAgCb,SAAAkB,IAAA,IAAA7D,EAAA,OAAAyC,EAAAC,EAAAM,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cACqCrH,EAA3BL,YAA2BK,EAAdC,UADvB+H,EAAAX,KAAA,EAE0BrF,EAAcC,aAFxC,OAEQiC,EAFR8D,EAAAJ,KAGEzD,EAAaD,GACbH,EAAQL,EAAMR,KAAN,QAJV,wBAAA8E,EAAAH,SAAAE,OAhCavB,MAAAC,KAAAtG,WAqDb,SAAS8H,GAAcC,EAAGnB,GACb,IAARA,GACDxB,EAAkB2C,EAAEC,OAAO7G,OAElB,IAARyF,GACDpB,EAAkBuC,EAAEC,OAAO7G,OAElB,IAARyF,GACDhB,EAAkBmC,EAAEC,OAAO7G,OAElB,IAARyF,GACDZ,GAAkB+B,EAAEC,OAAO7G,OAhElB,SAoEE8G,GApEFC,GAAA,OAAAC,GAAA9B,MAAAC,KAAAtG,WAAA,SAAAmI,KAAA,OAAAA,GAAA1E,OAAA8C,EAAA,EAAA9C,CAAA+C,EAAAC,EAAAC,KAoEb,SAAA0B,EAA2BxB,GAA3B,IAAAyB,EAAAC,EAAAC,EAAAC,EAAA,OAAAhC,EAAAC,EAAAM,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cACMmB,EAAgBlD,EAChBmD,EAAmBlE,EACV,IAAVwC,IACDyB,EAAgB9C,EAChB+C,EAAmB9D,GAER,IAAVoC,IACDyB,EAAgB1C,EAChB2C,EAAmB1D,GAER,IAAVgC,IACDyB,EAAgBtC,GAChBuC,EAAmBtD,GAEfuD,EAAQ1I,EAAIa,YAAY,CAC5BP,KAAM4D,EACN1D,GAAIf,OAAOiI,iBACXnH,WAAY,sBACZG,OAAQ,CACNqG,MAAOQ,gBAAcC,MAAMC,OAAOV,IAClCE,MAAOM,gBAAcC,MAAMC,OAAOe,OArBxCI,EAAAvB,KAAA,EAwBmBrF,EAAcc,gBAAgB4F,GAxBjD,OAwBQC,EAxBRC,EAAAhB,KAyBEiB,QAAQC,IAAIH,GACF,MAANA,GACFI,MAAM,sEAERN,EAAiBhB,OAAOe,IA7B1B,yBAAAI,EAAAf,SAAAU,OApEa/B,MAAAC,KAAAtG,WAmGb,OAvFA6I,oBAAU,WACR5C,GAAc,EAAG7B,GACjB6B,GAAc,EAAGzB,GACjByB,GAAc,EAAGrB,GACjBqB,GAAc,EAAGjB,IACjB,IAmFA8D,EAAArC,EAAAsC,cAAAC,EAAA,OACEF,EAAArC,EAAAsC,cAAC7F,EAAD,KAAQ4F,EAAArC,EAAAsC,cAAAE,EAAA,GAAQC,KAAK,QAAQC,MAAO,CAACC,WAAY,aAAcC,QArGtD,kBAAA1B,GAAAtB,MAAAC,KAAAtG,aAqGD,oCACR8I,EAAArC,EAAAsC,cAAC5F,EAAD,KACE2F,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,OAAOiH,QAAQ,SAASC,MAAM,SAASC,UAAS,aACxDX,EAAArC,EAAAsC,cAAAW,EAAA,OACEZ,EAAArC,EAAAsC,cAAA,OAAKY,IAAKC,IAAQC,IAAI,SAASV,MAAO,CAACW,MAAO,GAAIC,OAAQ,GAAIC,UAAU,MACxElB,EAAArC,EAAAsC,cAAA,MAAII,MAAO,CAACc,SAAU,GAAIb,WAAY,cAAtC,yBAA0EN,EAAArC,EAAAsC,cAAA,WAA1E,mBACAD,EAAArC,EAAAsC,cAAA,MAAII,MAAO,CAACc,SAAU,GAAIb,WAAY,YAAtC,wCACAN,EAAArC,EAAAsC,cAAA,OAAKI,MAAO,CAACW,MAAO,IAAKI,OAAQ,IAAKC,aAAc,GAAIH,UAAW,KACjElB,EAAArC,EAAAsC,cAACqB,EAAA,EAAD,CACEC,OAAO,mCACPC,MAAQ,WACRC,OA1Ed,SAAmBC,EAASC,GAE1BA,EAAKC,KAAKC,KAAK,WACb,IAAMC,EAAM,IAAIH,EAAKC,KAAKG,IAAIL,EAAS,CACrCM,OAAQ,IAAIL,EAAKC,KAAKK,OAHT,WAAwB,aAIrCC,MAAO,IAGM,IAAIP,EAAKC,KAAKO,OAAO,CAClCC,SAAU,IAAIT,EAAKC,KAAKK,OARX,WAAwB,eAWhCI,OAAOP,SAiER9B,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,OAAO6G,MAAO,CAACgB,aAAc,GAAIf,WAAW,YACpDN,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,EAAGjC,MAAO,CAACkC,WAAY,SAAlC,yCACAvC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,EAAGjC,MAAO,CAACkC,WAAY,SAAlC,mCACAvC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,EAAGjC,MAAO,CAACkC,WAAY,SAAlC,gDAEFvC,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,QACRwG,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAX,+CACAtC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAIjH,GACf2E,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAGtC,EAAArC,EAAAsC,cAAAuC,EAAA,GAAOpC,KAAK,QAAQ5G,KAAK,SAASnB,MAAOgE,EAAgBoG,SAAU,SAACxD,GAAD,OAAKD,GAAcC,EAAG,IAAIyD,WAAY1C,EAAArC,EAAAsC,cAAAE,EAAA,GAAQI,QAAS,kBAAIpB,GAAY,IAAIwD,SAAU9H,IAASJ,EAAMR,KAAN,QAAwB2I,KAAK,cAE9M5C,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,QACRwG,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAX,yCACAtC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAI7G,GACfuE,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAGtC,EAAArC,EAAAsC,cAAAuC,EAAA,GAAOpC,KAAK,QAAQ5G,KAAK,SAASnB,MAAOoE,EAAgBgG,SAAU,SAACxD,GAAD,OAAKD,GAAcC,EAAG,IAAIyD,WAAY1C,EAAArC,EAAAsC,cAAAE,EAAA,GAAQI,QAAS,kBAAIpB,GAAY,IAAIwD,SAAU9H,IAASJ,EAAMR,KAAN,QAAwB2I,KAAK,cAE9M5C,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,QACRwG,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAX,+CACAtC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAIzG,GACfmE,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAGtC,EAAArC,EAAAsC,cAAAuC,EAAA,GAAOpC,KAAK,QAAQ5G,KAAK,SAASnB,MAAOwE,EAAgB4F,SAAU,SAACxD,GAAD,OAAKD,GAAcC,EAAG,IAAIyD,WAAY1C,EAAArC,EAAAsC,cAAAE,EAAA,GAAQI,QAAS,kBAAIpB,GAAY,IAAIwD,SAAU9H,IAASJ,EAAMR,KAAN,QAAwB2I,KAAK,cAE9M5C,EAAArC,EAAAsC,cAAAO,EAAA,GAAKhH,KAAK,QACRwG,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAX,0CACAtC,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAIrG,GACf+D,EAAArC,EAAAsC,cAAAW,EAAA,GAAK0B,KAAM,GAAGtC,EAAArC,EAAAsC,cAAAuC,EAAA,GAAOpC,KAAK,QAAQ5G,KAAK,SAASnB,MAAO4E,GAAgBwF,SAAU,SAACxD,GAAD,OAAKD,GAAcC,EAAG,IAAKyD,WAAY1C,EAAArC,EAAAsC,cAAAE,EAAA,GAAQI,QAAS,kBAAIpB,GAAY,IAAIwD,SAAU9H,IAASJ,EAAMR,KAAN,QAAwB2I,KAAK,mBCjJvMC,QACW,cAA7BrM,OAAOsM,SAASC,UAEe,UAA7BvM,OAAOsM,SAASC,UAEhBvM,OAAOsM,SAASC,SAASC,MACvB,2DCZNC,IAASxB,OAAOzB,EAAArC,EAAAsC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.3a16a6e7.chunk.js","sourcesContent":["import IconService, {\n  HttpProvider,\n  IconBuilder,\n} from 'icon-sdk-js'\nimport config from '../config'\n\nconst provider = new HttpProvider(window.PROVIDER_URL)\nconst iconService = new IconService(provider)\n\nconst {\n  CallBuilder,\n  CallTransactionBuilder,\n} = IconBuilder;\n\nconst callBuild = ({\n  from,\n  methodName,\n  to,\n  params = {},\n} = {}) => {\n  const callBuilder = new CallBuilder();\n  const obj = callBuilder\n    .from(from)\n    .to(to)\n    .method(methodName)\n    .params(params)\n    .build();\n  return obj;\n};\n\nconst sendTxBuild = ({\n  from,\n  to,\n  methodName,\n  params = {},\n  networkId = window.NID,\n  stepLimit = '0x493e0',\n  value = '0x0',\n} = {}) => {\n  const callTransactionBuilder = new CallTransactionBuilder();\n  const obj = callTransactionBuilder\n    .nid(networkId)\n    .from(from)\n    .to(to)\n    .stepLimit(stepLimit)\n    .value(value)\n    .timestamp(`0x${((new Date()).getTime() * 1000).toString(16)}`)\n    .method(methodName)\n    .params(params)\n    .version('0x3')\n    .build();\n\n  return {\n    jsonrpc: '2.0',\n    method: 'icx_sendTransaction',\n    params: obj,\n    id: 1,\n  };\n};\n\nexport default {\n  iconService,\n  callBuild,\n  sendTxBuild,\n}","const getAddress = () => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_ADDRESS') {\n        resolve(payload);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_ADDRESS',\n      },\n    }));\n  });\n  \n  \n  const sendTransaction = params => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_JSON-RPC') {\n        resolve(payload.result);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_JSON-RPC',\n        payload: params,\n      },\n    }));\n  });\n  \n  export default {\n    getAddress,\n    sendTransaction,\n  };","export default {\n  'MODE': {\n      'LOG_OUT': 'LOG_OUT',\n      'LOG_IN': 'LOG_IN',\n  }\n}","import React, {useState, useEffect} from 'react';\nimport { Button, message, Layout, Row, Col , Input} from 'antd'\nimport DaumMap from 'daum-maps-react'\n\nimport SDK from 'apis/SDK';\nimport IconexConnect from 'apis/IconexConnect';\nimport CONST from './constants';\n\n// import logo from './logo.svg';\nimport marker from 'assets/images/marker.png'\nimport './App.css';\n\nimport {\n  IconConverter\n} from 'icon-sdk-js'\n\n//define\nconst { Header , Content } = Layout;\n\nfunction App() {\n  const [ mode, setMode ] = useState( CONST.MODE['LOG_OUT'])\n  const [ myAddress, setMyAddress ] = useState('')\n  const [ cheapestPrice1, setCheapestPrice1 ] = useState(0)\n  const [ cheapestPrice2, setCheapestPrice2 ] = useState(0)\n  const [ cheapestPrice3, setCheapestPrice3 ] = useState(0)\n  const [ cheapestPrice4, setCheapestPrice4 ] = useState(0)\n  const [priceToUpdate1, setPriceToUpdate1 ] = useState(0)\n  const [priceToUpdate2, setPriceToUpdate2 ] = useState(0)\n  const [priceToUpdate3, setPriceToUpdate3 ] = useState(0)\n  const [priceToUpdate4, setPriceToUpdate4 ] = useState(0)\n\n  useEffect(()=> {\n    get_set_Price(1, setCheapestPrice1)\n    get_set_Price(2, setCheapestPrice2)\n    get_set_Price(3, setCheapestPrice3)\n    get_set_Price(4, setCheapestPrice4)\n  },[])\n\n  // 가격 가져오기 \n  async function get_set_Price(label, obj_CheapestPrice){\n    const price = await SDK.iconService.call(\n      SDK.callBuild({\n        methodName: 'get_lowest_price',\n        params: {\n          label: IconConverter.toHex(Number(label))\n        },\n        to: window.CONTRACT_ADDRESS,\n      })\n    ).execute()\n    obj_CheapestPrice(Number(price))\n  }\n  async function getAddress()  { // 로그인\n    const { iconService, callBuild } = SDK\n    const myAddress = await IconexConnect.getAddress()\n    setMyAddress(myAddress)\n    setMode(CONST.MODE['LOG_IN'])\n  }\n  function mapRender(element, daum) {\n    const latitude = 37.5674844, longitude = 126.9880931\n    daum.maps.load(() => {\n      const map = new daum.maps.Map(element, {\n        center: new daum.maps.LatLng(latitude, longitude),\n        level: 3,\n      });\n\n      const marker = new daum.maps.Marker({\n        position: new daum.maps.LatLng(latitude, longitude),\n      });\n\n      marker.setMap(map);\n    });\n  }\n  function onInputChange(e, label) {\n    if(label===1) {\n      setPriceToUpdate1(e.target.value)\n    }\n    if(label===2) {\n      setPriceToUpdate2(e.target.value)\n    }\n    if(label===3) {\n      setPriceToUpdate3(e.target.value)\n    }\n    if(label===4) {\n      setPriceToUpdate4(e.target.value)\n    }\n  }\n\n  async function updatePrice(label) {\n    var priceToUpdate = priceToUpdate1\n    var setCheapestPrice = setCheapestPrice1\n    if(label === 2) {\n      priceToUpdate = priceToUpdate2\n      setCheapestPrice = setCheapestPrice2\n    }\n    if(label === 3) {\n      priceToUpdate = priceToUpdate3\n      setCheapestPrice = setCheapestPrice3\n    }\n    if(label === 4) {\n      priceToUpdate = priceToUpdate4\n      setCheapestPrice = setCheapestPrice4\n    }\n    const txObj = SDK.sendTxBuild({\n      from: myAddress,\n      to: window.CONTRACT_ADDRESS,\n      methodName: 'update_lowest_price',\n      params: {\n        label: IconConverter.toHex(Number(label)), \n        price: IconConverter.toHex(Number(priceToUpdate))\n      },\n    })\n    const tx = await IconexConnect.sendTransaction(txObj)\n    console.log(tx)\n    if (tx == null){\n      alert(\"가격 갱신에 실패했어요....\")\n    }\n    setCheapestPrice(Number(priceToUpdate))\n  }\n  return (\n    <Layout>\n      <Header><Button size=\"large\" style={{fontFamily: \"monospace\"}} onClick={getAddress}>ICONex 연동하기</Button></Header>\n      <Content>\n        <Row type=\"flex\" justify=\"center\" align=\"middle\" className={`page-wrap`}>\n          <Col>\n            <img src={marker} alt=\"marker\" style={{width: 50, margin: 20, marginTop:30}}/>\n            <h1 style={{fontSize: 40, fontFamily: \"monospace\"}}>Find the Cheapest Gym <br/> near My Place.</h1>\n            <h2 style={{fontSize: 20, fontFamily: \"fantasy\"}}>- 을지로 3가 편-</h2>\n            <div style={{width: 500, height: 300, marginBottom: 20, marginTop: 10}}>\n              <DaumMap \n                apiKey=\"bd544c2a16fcb0ffcb56bec002d0d539\"\n                mapId={ 'daum-map' }\n                render={mapRender}\n              />\n            </div>\n            <Row type=\"flex\" style={{marginBottom: 10, fontFamily:\"fantasy\"}}>\n              <Col span={8} style={{fontWeight: \"bold\"}}>헬스장 리스트</Col>\n              <Col span={8} style={{fontWeight: \"bold\"}}>현재 최저가</Col>\n              <Col span={8} style={{fontWeight: \"bold\"}}>최저가 갱신하기</Col>\n            </Row>\n            <Row type=\"flex\">\n              <Col span={8}>우리동네 헬스장</Col>\n              <Col span={8}>{cheapestPrice1}</Col>\n              <Col span={8}><Input size=\"large\" type=\"number\" value={priceToUpdate1} onChange={(e)=>onInputChange(e, 1)} addonAfter={<Button onClick={()=>updatePrice(1)} disabled={mode === CONST.MODE['LOG_OUT'] } icon=\"check\"/>}/></Col>\n            </Row>\n            <Row type=\"flex\">\n              <Col span={8}>옆동네 헬스장</Col>\n              <Col span={8}>{cheapestPrice2}</Col>\n              <Col span={8}><Input size=\"large\" type=\"number\" value={priceToUpdate2} onChange={(e)=>onInputChange(e, 2)} addonAfter={<Button onClick={()=>updatePrice(2)} disabled={mode === CONST.MODE['LOG_OUT'] } icon=\"check\"/>}/></Col>\n            </Row>\n            <Row type=\"flex\">\n              <Col span={8}>아주무거 헬스장</Col>\n              <Col span={8}>{cheapestPrice3}</Col>\n              <Col span={8}><Input size=\"large\" type=\"number\" value={priceToUpdate3} onChange={(e)=>onInputChange(e, 3)} addonAfter={<Button onClick={()=>updatePrice(3)} disabled={mode === CONST.MODE['LOG_OUT'] } icon=\"check\"/>}/></Col>\n            </Row>\n            <Row type=\"flex\">\n              <Col span={8}>작삼2시 헬스장</Col>\n              <Col span={8}>{cheapestPrice4}</Col>\n              <Col span={8}><Input size=\"large\" type=\"number\" value={priceToUpdate4} onChange={(e)=>onInputChange(e, 4)}  addonAfter={<Button onClick={()=>updatePrice(4)} disabled={mode === CONST.MODE['LOG_OUT'] } icon=\"check\"/>}/></Col>\n            </Row>\n          </Col>\n        </Row>\n    </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/marker.71c80642.png\";"],"sourceRoot":""}